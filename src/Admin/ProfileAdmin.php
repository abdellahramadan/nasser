<?php

namespace App\Admin;

use App\Entity\Attachment;
use App\Service\FileUploader;
use App\Service\SlugText;
use FOS\CKEditorBundle\Form\Type\CKEditorType;
use Sonata\AdminBundle\Admin\AbstractAdmin;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Form\FormMapper;
use Sonata\AdminBundle\Show\ShowMapper;
use Symfony\Component\Form\Extension\Core\Type\CountryType;
use Symfony\Component\Form\Extension\Core\Type\CurrencyType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\Form\Extension\Core\Type\IntegerType;
use Symfony\Component\Form\Extension\Core\Type\TextType;

class ProfileAdmin extends AbstractAdmin
{
    private $slugger;
    private $fileUploader;

    public function __construct(string $code, string $class, string $baseControllerName, SlugText $slugger, FileUploader $fileUploader)
    {
        parent::__construct($code, $class, $baseControllerName);

        $this->slugger = $slugger;
        $this->fileUploader = $fileUploader;
    }

    public function configureFormFields(FormMapper $form): void
    {
        parent::configureFormFields($form); // TODO: Change the autogenerated stub
        $form
            ->add('fullname', TextType::class, [
                'label' => 'Nom complet',
                'attr' => [
                    'placeholder' => 'Nom complet'
                ]
            ])
            ->add('AccountNumber', TextType::class, [
                'label' => 'Numéro compte',
                'attr' => [
                    'placeholder' => 'Numéro compte'
                ]
            ])
            ->add('balance', IntegerType::class, [
                'label' => 'Montant',
                'required' => true,
                'attr' => [
                    'class' => 'form-control',
                    'placeholder' => 'Montant'
                ]

            ])
            ->add('country', CountryType::class, [
                'label' => 'Pays',
                'attr' => [
                    'placeholder' => 'Pays',
                ]
            ])
            ->add('address', TextType::class, [
                'label' => 'Adresse',
                'attr' => [
                    'placeholder' => 'Adresse'
                ]
            ])
            ->add('iban', TextType::class, [
                'label' => 'IABN',
                'attr' => [
                    'placeholder' => 'IBAN'
                ]
            ])
            ->add('swift', TextType::class, [
                'label' => 'Swift',
                'attr' => [
                    'placeholder' => 'Swift'
                ]
            ])
            ->add('currency', CurrencyType::class, [
                'label' => 'Dévise',
                'attr' => [
                    'placeholder' => 'Dévise'
                ]
            ])
            ->add('motif', CKEditorType::class, [
                'label' => 'Motif',
                'attr' => [
                    'placeholder' => 'Motif'
                ]
            ])
            ->add('autres', CKEditorType::class, [
                'label' => 'Autres',
                'attr' => [
                    'placeholder' => 'Autres'
                ]
            ])
            ->add('documents', FileType::class, [
                'attr' => [
                    'class' => 'form-control'
                ],
                'mapped' => false,
                'multiple' => true,
                'required' => false,
            ])
        ;
    }

    public function configureDatagridFilters(DatagridMapper $filter): void
    {
        parent::configureDatagridFilters($filter); // TODO: Change the autogenerated stub
        $filter
            ->add('fullname')
        ;
    }

    public function configureListFields(ListMapper $list): void
    {
        parent::configureListFields($list); // TODO: Change the autogenerated stub
        $list
            ->addIdentifier('fullname')
        ;
    }

    public function configureShowFields(ShowMapper $show): void
    {
        parent::configureShowFields($show); // TODO: Change the autogenerated stub
        $show
            ->add('fullname')
        ;
    }

    public function prePersist(object $profile): void
    {
        parent::prePersist($profile); // TODO: Change the autogenerated stub

        $profile->setSlug(
            $this->slugger->makeSlug($profile->getFullName())
        );

        if ($profile->getAttachments() !== NULL) {
            $attachments = $profile->getAttachments();
            foreach($attachments as $attachment) {
                $attachedFile = new Attachment();
                $filename = $this->fileUploader->upload($attachment, $profile->getSlug());
                $attachedFile->setFilename($filename);
            }
        }

    }

    public function preUpdate(object $profile): void
    {
        parent::preUpdate($profile); // TODO: Change the autogenerated stub

        if ($profile->getAttachments() !== NULL) {
            $attachments = $profile->getAttachments();
            foreach($attachments as $attachment) {
                $attachedFile = new Attachment();
                $filename = $this->fileUploader->upload($attachment, $profile->getSlug());
                $attachedFile->setFilename($filename);
            }
        }
    }
}